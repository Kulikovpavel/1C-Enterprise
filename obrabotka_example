Перем ФлагНачальникаКолонны;// определяет состав колонок и доступные действия


Процедура ВывестиТаблицуНарушений()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ 
	| Регистр.Регистратор КАК Документ,
	| Регистр.ТС,
	| Регистр.Водитель,
	| НарушениеВПути.ВидНарушения,
	| НарушениеВПути.МестоНарушения, 
	| НарушениеВПути.Примечание,
	| НарушениеВПути.Дата,
	| НарушениеВПути.Колонна,
	| НарушениеВПути.ДатаНарушения, 
	| НарушениеВПути.СостояниеТС,
	| НарушениеВПути.Свидетель,
	| ВЫБОР КОГДА ОбработанныеНарушения.Документ ЕСТЬ NULL ТОГДА Ложь ИНАЧЕ Истина КОНЕЦ КАК Обработан,
	| ОбработанныеНарушения.Ответсвенный,
	| ОбработанныеНарушения.Утверждающий,
	| ОбработанныеНарушения.Утвержден,
	| ОбработанныеНарушения.ДатаОбработки,
	| ОбработанныеНарушения.ДатаУтверждения,
	| ОбработанныеНарушения.ПроцентОтПремии,
	| ОбработанныеНарушения.Сумма,
	| ОбработанныеНарушения.Административный,
	| """" КАК СписокПараметров 
	|
	|ИЗ РегистрСведений.ЗарегистрированныеНарушения КАК Регистр
	|	СОЕДИНЕНИЕ Документ.НарушенияВПути КАК НарушениеВПути ПО НарушениеВПути.Ссылка = Регистр.Регистратор
	|   ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбработанныеНарушения КАК ОбработанныеНарушения ПО ОбработанныеНарушения.Документ = Регистр.Регистратор
	|ГДЕ (&Колонна = Значение(Справочник.уатКолонны.ПустаяСсылка) ИЛИ НарушениеВПути.Колонна = &Колонна)
	|    И (&ТС = Значение(Справочник.ОсновныеСредства.ПустаяСсылка) ИЛИ Регистр.ТС = &ТС)
	|    И (&Водитель = Значение(Справочник.ФизическиеЛица.ПустаяСсылка) ИЛИ Регистр.Водитель = &Водитель)
	|    И Регистр.ДатаНарушения МЕЖДУ &НачПериода И &КонПериода
	|    И (&ФлагНачальникаКолонны ИЛИ НЕ ОбработанныеНарушения.Документ ЕСТЬ NULL)
	|    И ((НЕ &ТолькоНеобработанные) ИЛИ ((&ФлагНачальникаКолонны И ВЫБОР КОГДА ОбработанныеНарушения.Документ ЕСТЬ NULL ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ)
	|                                        ИЛИ (НЕ &ФлагНачальникаКолонны И НЕ ОбработанныеНарушения.Утвержден)))" ;
	Запрос.УстановитьПараметр("Колонна", Колонна);
	Запрос.УстановитьПараметр("ТС", ТС);
	Запрос.УстановитьПараметр("Водитель", Водитель);
	Запрос.УстановитьПараметр("НачПериода", НачПериода);
	Запрос.УстановитьПараметр("КонПериода", КонПериода);
	Запрос.УстановитьПараметр("ФлагНачальникаКолонны", ФлагНачальникаКолонны);
	Запрос.УстановитьПараметр("ТолькоНеобработанные", ТолькоНеобработанные);
	Результат = Запрос.Выполнить().Выгрузить();	
	
	Если ФлагНачальникаКолонны Тогда
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Обработать.Доступность = Истина;
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Утвердить.Доступность = Ложь;
		ЭлементыФормы.Нарушения.Колонки.Административный.Видимость = Ложь;
		ЭлементыФормы.Нарушения.Колонки.Сумма.Видимость = Ложь;
		ЭлементыФормы.Нарушения.Колонки.ПроцентОтПремии.Видимость = Ложь;
	Иначе
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Обработать.Доступность = Ложь;
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Утвердить.Доступность = Истина;
	КонецЕсли;
	
	Нарушения.Загрузить(Результат);
	
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
	ВывестиТаблицуНарушений()
КонецПроцедуры

Процедура ПриОткрытии()
	Согласующий = ПараметрыСеанса.ТекущийПользователь;
	Если ПолучитьЗначениеПоУмолчанию(Согласующий, "УтверждатьНарушенияВПути") Тогда
		ФлагНачальникаКолонны = Ложь;
	Иначе
		ФлагНачальникаКолонны = Истина;
	КонецЕсли;
	ТолькоНеобработанные = Истина;
	
	НачПериода = НачалоМесяца(ТекущаяДата() - 90*86400);
	КонПериода = КонецМесяца(ТекущаяДата());
	ВывестиТаблицуНарушений();
КонецПроцедуры

Процедура ДействияФормыВывестиТаблицу(Кнопка)
	ВывестиТаблицуНарушений()
КонецПроцедуры

Процедура ОсновныеДействияФормыОбработать(Кнопка)
	Для Каждого Строка Из Нарушения Цикл
		Если Строка.Пометка И НЕ Строка.Обработан Тогда
			Запись = РегистрыСведений.ОбработанныеНарушения.СоздатьМенеджерЗаписи();
			Запись.Документ = Строка.Документ;
			Запись.ДатаОбработки = ТекущаяДата();
			Запись.ТС = Строка.ТС;
			Запись.Водитель = Строка.Водитель;
			Запись.Ответсвенный = Согласующий;
			Запись.Записать();
		КонецЕсли;
	КонецЦикла;
	
	ВывестиТаблицуНарушений()
КонецПроцедуры

Процедура ОсновныеДействияФормыУтвердить(Кнопка)
	Для Каждого Строка Из Нарушения Цикл
		Если Строка.Пометка Тогда
			Запись = РегистрыСведений.ОбработанныеНарушения.СоздатьМенеджерЗаписи();
			Запись.Документ = Строка.Документ;
			Запись.Прочитать();
			Запись.ДатаУтверждения = ТекущаяДата();
			Запись.Утверждающий = Согласующий;
			Запись.Утвержден = Истина;
			Запись.Сумма = Строка.Сумма;
			Запись.ПроцентОтПремии = Строка.ПроцентОтПремии;
			Запись.Административный = Строка.Административный;
			Запись.Записать(Истина);
		КонецЕсли;
	КонецЦикла;
	
	ВывестиТаблицуНарушений()
КонецПроцедуры

Процедура НарушенияПриПолученииДанных(Элемент, ОформленияСтрок)
	Для Каждого Строка Из ОформленияСтрок Цикл
		Если Строка.ДанныеСтроки.Обработан И ФлагНачальникаКолонны Тогда
			Строка.Ячейки.Пометка.ТолькоПросмотр = Истина;
			Строка.Ячейки.Пометка.Картинка = БиблиотекаКартинок.Утвердить;
		КонецЕсли;
		
		СтрокаПараметров = "";
		Для Каждого Параметр ИЗ Строка.ДанныеСтроки.Документ.Параметры Цикл
			СтрокаПараметров = СтрокаПараметров + Параметр.Параметр + ": "+ Строка(Параметр.Значение) + ";";
		КонецЦикла;
		Строка.ДанныеСтроки.СписокПараметров = СтрокаПараметров;	
	КонецЦикла;
КонецПроцедуры

Процедура ТолькоНеобработанныеПриИзменении(Элемент)
	ВывестиТаблицуНарушений()
КонецПроцедуры

Процедура НачПериодаПриИзменении(Элемент)
	ВывестиТаблицуНарушений()
КонецПроцедуры

Процедура КонПериодаПриИзменении(Элемент)
	ВывестиТаблицуНарушений()
КонецПроцедуры

Процедура КолоннаПриИзменении(Элемент)
	ВывестиТаблицуНарушений()
КонецПроцедуры

Процедура ВодительПриИзменении(Элемент)
	ВывестиТаблицуНарушений()
КонецПроцедуры

Процедура ТСПриИзменении(Элемент)
	ВывестиТаблицуНарушений()
КонецПроцедуры

Процедура ОтменитьВсеНажатие(Элемент)
	Для Каждого Строка ИЗ Нарушения Цикл
		Строка.Пометка = Ложь
	КонецЦикла;
КонецПроцедуры

Процедура ВыбратьВсеНажатие(Элемент)
	Для Каждого Строка ИЗ Нарушения Цикл
		Если НЕ Строка.Обработан Тогда Строка.Пометка = Истина КонецЕсли;
	КонецЦикла;
КонецПроцедуры
