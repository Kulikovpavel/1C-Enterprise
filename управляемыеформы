&НаКлиенте
Процедура ЗагрузитьФайл(Команда)
	Если ИмяФайла = "" Тогда
		Сообщить("Файл не выбран");
		Возврат;
	КонецЕсли;
	
	ФайлДляПередачи = Новый ДвоичныеДанные(ИмяФайла); 
    АдресХранилища        = ПоместитьВоВременноеХранилище(ФайлДляПередачи,);
	ПолучитьТЗИЗCSV(АдресХранилища);
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	Фильтр = НСтр("ru = 'csv'; en = 'csv'")
	    + "(*.csv)|*.csv";
	ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок = "Выберите файлы";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		ИмяФайла =  ДиалогОткрытияФайла.ПолноеИмяФайла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПолучитьТЗИЗCSV(АдресХранилища, Разделитель = ";")
	
	Таблица = Новый ТаблицаЗначений;
	
	// чтение
	ФайлИзХранилища = ПолучитьИзВременногоХранилища(АдресХранилища);
	ВременныйФайл = ПолучитьИмяВременногоФайла();
	ФайлИзХранилища.Записать(ВременныйФайл);
	ЗагружаемыйФайл = Новый ТекстовыйДокумент;
	
	ЗагружаемыйФайл.Прочитать(ВременныйФайл, "utf-8");
	
	Шапка = ЗагружаемыйФайл.ПолучитьСтроку(1);
	//раскладываем стрoку в массив
	МассивКол = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Шапка,Разделитель); // процедура из типовой конфигурации, разбивает строку в массив по разделителям

	//генерируем столбцы
	Для Каждого ИмяСтолбца Из МассивКол Цикл
		ИмяБезПробелов = СтрЗаменить(ИмяСтолбца," ",""); // убираем из имени пробелы
		ИмяБезПробелов = СтрЗаменить(ИмяБезПробелов,"№",""); // убираем из имени №
		Таблица.Колонки.Добавить(ИмяБезПробелов,,ИмяСтолбца);
	КонецЦикла;
	Таблица.Колонки.Добавить("Контрагент");
	Таблица.Колонки.Добавить("ДокРеализации");

	Для НомерСтроки=2 по ЗагружаемыйФайл.КоличествоСтрок() Цикл

		// получить стрoку с указанным номером и преобразуем её в массив
		Строка = ЗагружаемыйФайл.ПолучитьСтроку(НомерСтроки);
		МассивКол = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Строка,Разделитель);// процедура из типовой конфигурации, разбивает строку в массив по разделителям
		НоваяСтрочка= Таблица.Добавить();

		Если МассивКол.Количество() <> Таблица.Колонки.Количество()-2 Тогда  // два доп.поля
			Сообщить("Скорее всего в тексте содержится разделитель");
			Продолжить;
		КонецЕсли;

		Для НомерСтолбца= 1 по МассивКол.Количество() Цикл
			//заполняем строчку значениями
			ТекущееЗначение = МассивКол[НомерСтолбца-1];
			ИмяКолонки = Таблица.Колонки[НомерСтолбца-1].Имя;
			НоваяСтрочка[ИмяКолонки] = ТекущееЗначение;
		КонецЦикла;

	КонецЦикла;
	
	Для Каждого Строка ИЗ Таблица Цикл
		Попытка
			Строка.ДатаАктивации = ИзСтрокиВДату(Строка.ДатаАктивации);;
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
		
		Если Строка.ИНН = "-" Тогда
			Строка.ИНН = "000000000000"
		КонецЕсли;
		
		Строка.НомерСчета = ДобавитьНули(Строка.НомерСчета, 11);
		Строка.ДокРеализации = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(Строка.НомерСчета, Строка.ДатаАктивации);
		
		Строка.Контрагент = Справочники.Контрагенты.НайтиПоРеквизиту("ИНН", Строка.ИНН);
		Если Строка.Контрагент = Справочники.Контрагенты.ПустаяСсылка() Тогда
			Сообщить("Внимание, контрагент по ИНН не найден: " + Строка.ИНН);
		КонецЕсли;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Таблица, "ТЗФорма");
КонецПроцедуры

&НаСервере
Функция ИзСтрокиВДату(СтрДата)
	Если Найти(СтрДата, "-") Тогда
		Возврат Дата(СтрЗаменить(СтрДата, "-", ""));
	Иначе		
	    стрДата_ = СокрЛП(СтрЗаменить(стрДата,".",""));
	    датДата = Сред(стрДата_,5)+Сред(стрДата_,3,2)+Лев(стрДата_,2);
	    Если СтрДлина(стрДата_)=6 Тогда
	        датДата = "20"+датДата;
	    КонецЕсли;            
		Возврат Дата(датДата);
	КонецЕсли;	
КонецФункции

&НаСервере
Функция ДобавитьНули(Значение, НужнаяДлинаЗначения)      
    Значение = СтрЗаменить(Формат(Значение, "ЧГ="), " ", "");
    НадоНулей = НужнаяДлинаЗначения - СтрДлина(Значение);
	Если НадоНулей <= 0 Тогда
		Возврат Значение
	КонецЕсли;
    ВедущиеНули = Формат(0,"ЧЦ="+НадоНулей+";ЧН=; ЧВН=; ЧГ=0");
    Возврат ВедущиеНули + Значение;   
КонецФункции

&НаСервере
Процедура ЗагрузитьРеализацииНаСервере()
	
	ТЗ = РеквизитФормыВЗначение("ТЗФорма", Тип("ТаблицаЗначений"));
	Для Каждого Строка Из ТЗ Цикл
		Если Строка.Контрагент = Справочники.Контрагенты.ПустаяСсылка() Тогда
			Продолжить
		КонецЕсли;
		
		Если Строка.Операция = "ххх" ИЛИ  Строка.Операция = "ххх" Тогда
			ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Услуги;
			ФлагУслуг = Истина;
		ИначеЕсли Строка.Операция = "ххх" Тогда
			ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.ПродажаКомиссия;
			ФлагУслуг = Ложь;
		Иначе
			Сообщить("Неопознанная операция: " + Строка.Операция);
			Продолжить;		
		КонецЕсли;

		Док = Строка.ДокРеализации;
		Если ЗначениеЗаполнено(Док) Тогда
			ДокОбъект = Док.ПолучитьОбъект();
			ДокОбъект.Услуги.Очистить();
			ДокОбъект.Товары.Очистить();
		Иначе
			ДокОбъект = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
			ДокОбъект.Дата = Строка.ДатаАктивации;
			ДокОбъект.Номер = Строка.НомерСчета;
		КонецЕсли;
		
		ДокОбъект.СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.РасчетыСПокупателями;
		ДокОбъект.СчетУчетаРасчетовПоАвансам = ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученным;
		ДокОбъект.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически;
		
		ДокОбъект.Организация = Справочники.Организации.НайтиПоРеквизиту("ИНН", "ххх");
		ДокОбъект.ВидОперации = ВидОперации;
		ДокОбъект.Контрагент = Строка.Контрагент;
		ДокОбъект.ДоговорКонтрагента = ДокОбъект.Контрагент.ОсновнойДоговорКонтрагента;
		ДокОбъект.СуммаВключаетНДС = Истина;
		ДокОбъект.Комментарий = "Загружен автоматически; " + Строка.СпособОплаты + "; " + Строка.ПП + "; " + Строка.ДатаПП;
		ДокОбъект.ВалютаДокумента = ДокОбъект.ДоговорКонтрагента.ВалютаВзаиморасчетов;

		СуммаЛицензии = Строка.СуммаЗаЛицензию;
		Если ФлагУслуг Тогда
			НаименованиеЛицензии = "ххх";
		Иначе
			Если СуммаЛицензии > 5500 Тогда
				НаименованиеЛицензии = "ххх";
			ИначеЕсли СуммаЛицензии > 1400 Тогда
				НаименованиеЛицензии = "ххх";
			Иначе
				НаименованиеЛицензии = "ххх";
			КонецЕсли;			
		КонецЕсли;
		Лицензия = Справочники.Номенклатура.НайтиПоНаименованию(НаименованиеЛицензии, Истина);
		СтрокаУслуги = ДокОбъект.Услуги.Добавить();
		СтрокаУслуги.Номенклатура = Лицензия;
		СтрокаУслуги.Содержание = Лицензия;
		СтрокаУслуги.Количество = 1;
		СтрокаУслуги.Цена = СуммаЛицензии;
		СтрокаУслуги.Сумма = СуммаЛицензии;
		СтрокаУслуги.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		
		ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаУслуги, Истина);
		СтрокаУслуги.СчетДоходов = ПланыСчетов.Хозрасчетный.ВыручкаНеЕНВД;
		СтрокаУслуги.СчетРасходов = ПланыСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД;
		СтрокаУслуги.СчетУчетаНДСПоРеализации = ПланыСчетов.Хозрасчетный.Продажи_НДС;
		СтрокаУслуги.Субконто = Лицензия.НоменклатурнаяГруппа;
		Если Не ФлагУслуг Тогда
			СуммаЗаСвязь = Строка.СуммаЗаСвязь;
			Если СуммаЗаСвязь = 15000 Тогда
				НаименованиеТовара = "ххх";
			ИначеЕсли СуммаЗаСвязь = 7500 Тогда
				НаименованиеТовара = "ххх";
			Иначе
				НаименованиеТовара = "ххх";
			КонецЕсли;
			Товар = Справочники.Номенклатура.НайтиПоНаименованию(НаименованиеТовара, Истина);
			СтрокаТовара = ДокОбъект.Товары.Добавить();
			СтрокаТовара.Номенклатура = Товар;
			СтрокаТовара.Количество = 1;
			СтрокаТовара.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
			СтрокаТовара.Цена = СуммаЗаСвязь;
			СтрокаТовара.Сумма = СуммаЗаСвязь;
			
			ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаТовара, Истина);
			СтрокаТовара.СчетУчета = ПланыСчетов.Хозрасчетный.ТоварыНаСкладе;
			СтрокаТовара.СчетДоходов = ПланыСчетов.Хозрасчетный.ВыручкаНеЕНВД;
			СтрокаТовара.СчетРасходов = ПланыСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД;
			СтрокаТовара.СчетУчетаНДСПоРеализации = ПланыСчетов.Хозрасчетный.Продажи_НДС;
			СтрокаТовара.Субконто = Товар.НоменклатурнаяГруппа;
		КонецЕсли;
			
		ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
		Попытка
			ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
		
		Строка.ДокРеализации = ДокОбъект.Ссылка;  //записываем наш объект в таблицу, чтобы не было дублей, случайно
	КонецЦикла;
		
	ЗначениеВРеквизитФормы(ТЗ, "ТЗФорма");
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьРеализации(Команда)
	ЗагрузитьРеализацииНаСервере();
КонецПроцедуры
