Процедура ВыполнитьЗагрузкуЗаявки(Файл) Экспорт
	ТЗ = ВернутьТЗИзExcel(Файл);
	МассивЗаявок = ВыделитьСамиЗаявки(ТЗ);
	СоздатьЗаказы(МассивЗаявок);
КонецПроцедуры

Функция ВернутьТЗИзExcel(Файл)
	#Если Клиент Тогда
		Состояние("Установка соединения с Excel");
	#КонецЕсли
	ЗаголовкиВСтроке1 = "HDR=NO;";
	СтрокаСоединения ="Provider=Microsoft.Jet.OLEDB.4.0;Data Source= " + Файл +" ;Extended Properties=""Excel 8.0;" + ЗаголовкиВСтроке1 + "IMEX=1;""";
	Connection = Новый COMОбъект("ADODB.Connection");
	Connection.ConnectionString =  СтрокаСоединения;
	Попытка
		Connection.Open();
	Исключение
		Сообщить ("Проблемы с подключением к Excel" );
		Возврат Неопределено;
	КонецПопытки;
	
	adSchemaTables = 20;
	Схема = Connection.OpenSchema(adSchemaTables);
	ИмяЛиста = Схема.fields("table_name").value;  // получаем имя первого листа
	Схема.close();
	
	RS = Новый COMОбъект("ADODB.Recordset");
	ТекстЗапроса =
	"SELECT
	|    Лист.*
	|FROM
	|    [" + ИмяЛиста + "] as Лист";
	Попытка
		RS.Open(ТекстЗапроса, Connection);
	Исключение
		Сообщить ("Проблемы с выполнением запроса");
		Возврат Неопределено;
	КонецПопытки;
 
	ТЗ = Новый ТаблицаЗначений; 
	КоличествоКолонок = rs.Fields.Count; 
	Для НомерКолонки = 0 По КоличествоКолонок - 1 Цикл 
		ТЗ.Колонки.Добавить(rs.Fields(НомерКолонки).Name); 
	КонецЦикла; 
	Пока rs.Eof()=0 Цикл 
		НовСтр = ТЗ.Добавить(); 
		Для НомерКолонки = 0 По КоличествоКолонок - 1 Цикл 
			НовСтр[НомерКолонки] = СОКРЛП(rs.Fields(НомерКолонки).Value); 
		КонецЦикла; 
		rs.MoveNext(); 
	КонецЦикла; 
	RS.Close();
	Connection.Close();
	Возврат ТЗ
КонецФункции

Функция ВыделитьСамиЗаявки(ТЗ)
	ФлагЗаявок = Ложь; // Определяем, когда начались или закончились заявки
	Массив = Новый Массив;
	Для Каждого Строка ИЗ ТЗ Цикл
		Если Строка.F1 = "" Тогда ФлагЗаявок = Ложь; КонецЕсли;
		
//Дата поездки	Ф.И.О пассажира	Должность, отдел, организация, к которой относится пасссажир	Номер телефона пассажира	Организация - плательщик за поездку	Пункт отправления	Время отправления	Пункт назначения	Комментарии
		Если ФлагЗаявок Тогда	
			Структура = Новый Структура("Дата, Пассажир, Подразделение, ПунктОтправления, ПунктНазначения, Комментарий, Оформитель");
			Структура.Дата = ТекстВДату(Строка.F1, Строка.F7);
			Структура.Пассажир = Строка.F2;
			Структура.Подразделение = Справочники.Подразделения.НайтиПоНаименованию(Строка.F5, Истина);
			Структура.ПунктОтправления = Справочники.уатПунктыНазначения.НайтиПоНаименованию(Строка.F6, Истина);
			Структура.ПунктНазначения = Справочники.уатПунктыНазначения.НайтиПоНаименованию(Строка.F8, Истина);
			Структура.Комментарий = Строка.F9;
			
			ПроверкаЗаполненности(Структура.Подразделение, Строка.F5 );
			ПроверкаЗаполненности(Структура.ПунктОтправления, Строка.F6);
			ПроверкаЗаполненности(Структура.ПунктНазначения, Строка.F8);

			Массив.Добавить(Структура);
		КонецЕсли;	
		Если Строка.F1 = "Дата поездки" Тогда ФлагЗаявок = Истина КонецЕсли;
		Если Строка.F3 <> "" И НЕ ФлагЗаявок Тогда Оформитель = Строка.F3 КонецЕсли;  // потом запишем в каждую структуру
	КонецЦикла;
	Для Каждого Строка Из Массив Цикл
		Строка.Оформитель = Оформитель;
	КонецЦикла;
	
	Возврат Массив;	
КонецФункции

Процедура ПроверкаЗаполненности(Значение, СтрокаПоиска)
	Если НЕ ЗначениеЗаполнено(Значение) Тогда 
		Сообщить("Не найден элемент в справочнике: " + СтрокаПоиска)
	КонецЕсли;
КонецПроцедуры

Функция ТекстВДату(Текст, Время)
	Если СтрДлина(Время) = 4 Тогда Время = "0" + Время; КонецЕсли;  // час с одной буквой, без нуля, добавляем ноль
	Возврат Дата(СРЕД(Текст, 7, 4) + СРЕД(Текст, 4,2) + ЛЕВ(Текст, 2) +Лев(Время, 2) + СРЕД(Время, 4, 2) + "00")
КонецФункции

Процедура СоздатьЗаказы(МассивЗаявок)
	МассивЗаказов = Новый Массив;
	Для Каждого Строка Из МассивЗаявок Цикл
		ДокЗаказа = Документы.уатЗаказГрузоотправителя.СоздатьДокумент();
		//Структура ("Дата, Пассажир, Подразделение, ПунктОтправления, ПунктНазначения, Комментарий, Оформитель");
		ДокЗаказа.АдресОтправления =Строка.ПунктОтправления;
		ДокЗаказа.АдресНазначения = Строка.ПунктНазначения;
		ДокЗаказа.ДатаОтправленияПлан = Строка.Дата;
		ДокЗаказа.Комментарий = Строка.Комментарий + ". Оформил: " + Строка.Оформитель;
		ДокЗаказа.Пассажир = Строка.Пассажир;
		ДокЗаказа.Подразделение = Строка.Подразделение;
		ДокЗаказа.Дата = ТекущаяДата();
		ДокЗаказа.Записать(РежимЗаписиДокумента.Проведение);
		
		МассивЗаказов.Добавить(ДокЗаказа.Ссылка);
	КонецЦикла;
	
	ДокМаршрутныйЛист = Документы.уатМаршрутныйЛист.СоздатьДокумент();
	ДокМаршрутныйЛист.Дата = ТекущаяДата();
	ДокМаршрутныйЛист.ВидОперации = Перечисления.уатВидыОперацийМаршрутныйЛист.ПоЗаказуГрузоотправителя;
	Для Каждого Заказ Из МассивЗаказов Цикл
		НоваяСтрокаТЧ = ДокМаршрутныйЛист.Заказы.Добавить();
		НоваяСтрокаТЧ.ЗаказГрузоотправителя = Заказ;
		НоваяСтрокаТЧ.ПрибытиеПлан = Заказ.ДатаОтправленияПлан;
		НоваяСтрокаТЧ.Пункт = Заказ.АдресОтправления;
		НоваяСтрокаТЧ.ТипТочкиМаршрута = Перечисления.уатТипыТочекМаршрута.Погрузка;
	КонецЦикла;
	
	Для Каждого Заказ Из МассивЗаказов Цикл
		НоваяСтрокаТЧ = ДокМаршрутныйЛист.Заказы.Добавить();
		НоваяСтрокаТЧ.ЗаказГрузоотправителя = Заказ;
		НоваяСтрокаТЧ.Пункт = Заказ.АдресНазначения;
		НоваяСтрокаТЧ.ТипТочкиМаршрута = Перечисления.уатТипыТочекМаршрута.Разгрузка;	
	КонецЦикла;	
	ДокМаршрутныйЛист.Записать();	
		
КонецПроцедуры
